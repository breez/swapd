syntax = "proto3";
package swap_internal;

service SwapManager {
    rpc AddAddressFilters (AddAddressFiltersRequest) returns (AddAddressFiltersReply) {}
    rpc GetInfo (GetInfoRequest) returns (GetInfoReply) {}
    rpc GetSwap (GetSwapRequest) returns (GetSwapReply) {}
    rpc ListRedeemable (ListRedeemableRequest) returns (ListRedeemableReply) {}
    rpc Redeem(RedeemRequest) returns (RedeemReply) {}
    rpc Stop (StopRequest) returns (StopReply) {}
}

message AddAddressFiltersRequest {
    repeated string addresses = 1;
}

message AddAddressFiltersReply {}

message GetInfoRequest {}
message GetInfoReply {
    uint64 block_height = 1;
    string network = 2;
}

message GetSwapRequest {
    optional string address = 1;
    optional string payment_request = 2;
    optional bytes payment_hash = 3;
}
message GetSwapReply {
    string address = 1;
    repeated SwapOutput outputs = 2;
}
message SwapOutput {
    string outpoint = 1;
    optional uint64 confirmation_height = 2;
}

message ListRedeemableRequest {}
message ListRedeemableReply {
    repeated RedeemableUtxo redeemables = 1;
}

message RedeemableUtxo {
    string outpoint = 1;
    string swap_hash = 2;
    uint32 lock_time = 3;
    uint64 confirmation_height = 4;
    int32 blocks_left = 5;
    optional string paid_with_request = 6;
}

message RedeemRequest {
    repeated string outpoints = 1;
    optional string destination_address = 2;
    optional uint32 fee_per_kw = 3;
    bool auto_bump = 4;
}
message RedeemReply {
    string tx_id = 1;
    uint32 fee_per_kw = 2;
}

message StopRequest {}
message StopReply {}